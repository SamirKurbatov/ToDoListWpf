// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ToDoList.Data.Context;

#nullable disable

namespace ToDoList.Migrations
{
    [DbContext(typeof(TodoDb))]
    [Migration("20231007233720_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ToDoList.Data.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Группа 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Группа 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Группа 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Группа 4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Группа 5"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Группа 6"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Группа 7"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Группа 8"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Группа 9"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Группа 10"
                        });
                });

            modelBuilder.Entity("ToDoList.Data.Entities.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Name", "Priority", "CreatedDate");

                    b.ToTable("Notes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 9,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Задача 1",
                            Priority = "Приоритет 1"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 10,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Задача 2",
                            Priority = "Приоритет 2"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Задача 3",
                            Priority = "Приоритет 3"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Задача 4",
                            Priority = "Приоритет 4"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 8,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Задача 5",
                            Priority = "Приоритет 5"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 8,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Задача 6",
                            Priority = "Приоритет 6"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Задача 7",
                            Priority = "Приоритет 7"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Задача 8",
                            Priority = "Приоритет 8"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Задача 9",
                            Priority = "Приоритет 9"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 6,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Задача 10",
                            Priority = "Приоритет 10"
                        });
                });

            modelBuilder.Entity("ToDoList.Data.Entities.Note", b =>
                {
                    b.HasOne("ToDoList.Data.Entities.Category", "Category")
                        .WithMany("Notes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ToDoList.Data.Entities.Category", b =>
                {
                    b.Navigation("Notes");
                });
#pragma warning restore 612, 618
        }
    }
}
